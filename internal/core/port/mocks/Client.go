// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	domain "github.com/AfoninaOlga/xkcd/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetComic provides a mock function with given fields: _a0
func (_m *Client) GetComic(_a0 int) (domain.UrlComic, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetComic")
	}

	var r0 domain.UrlComic
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (domain.UrlComic, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(int) domain.UrlComic); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(domain.UrlComic)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
